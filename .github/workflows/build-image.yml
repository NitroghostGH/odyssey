name: CI Build Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  # id-token must be 'write' for OIDC federation; 'read' can cause retries/noise in some scenarios
  id-token: write

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ghcr.io/${{ github.repository }}/odyssey
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies (test phase)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          python manage.py test --noinput

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image tags
        id: meta
        run: |
          SHA_TAG=${GITHUB_SHA::7}
          echo "sha_tag=$SHA_TAG" >> $GITHUB_OUTPUT
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "latest_tag=latest" >> $GITHUB_OUTPUT
          fi
          # Branch tag (sanitize slashes)
          BRANCH=${GITHUB_REF#refs/heads/}
          SAFE_BRANCH=$(echo "$BRANCH" | tr '/' '-')
          echo "branch_tag=$SAFE_BRANCH" >> $GITHUB_OUTPUT

      - name: Build image
        run: |
          docker build -t $IMAGE_NAME:${{ steps.meta.outputs.sha_tag }} .
          docker tag $IMAGE_NAME:${{ steps.meta.outputs.sha_tag }} $IMAGE_NAME:${{ steps.meta.outputs.branch_tag }}
          if [ -n "${{ steps.meta.outputs.latest_tag }}" ]; then
            docker tag $IMAGE_NAME:${{ steps.meta.outputs.sha_tag }} $IMAGE_NAME:latest
          fi

      - name: Push image
        if: github.event_name != 'pull_request'
        run: |
          docker push $IMAGE_NAME:${{ steps.meta.outputs.sha_tag }}
          docker push $IMAGE_NAME:${{ steps.meta.outputs.branch_tag }}
          if [ -n "${{ steps.meta.outputs.latest_tag }}" ]; then
            docker push $IMAGE_NAME:latest
          fi

      - name: Configure AWS credentials (for ECR)
        if: github.event_name != 'pull_request' && secrets.AWS_ROLE_TO_ASSUME != '' && secrets.AWS_REGION != '' && secrets.ECR_REPOSITORY != ''
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: odyssey-ci-${{ github.run_id }}
          # OIDC role assumption sometimes logs repeated 'Assuming role with OIDC' when retries occur.
          # The action transparently retries on transient sts/identity errors; this is normally safe to ignore.

      - name: AWS identity diagnostic (optional)
        if: github.event_name != 'pull_request' && secrets.AWS_ROLE_TO_ASSUME != '' && env.AWS_IDENTITY_DEBUG == 'true'
        run: |
          echo "Verifying AWS caller identity..."
          aws sts get-caller-identity
          echo "Listing ECR repositories (first 5):"
          aws ecr describe-repositories --query 'repositories[0:5].repositoryName'

      - name: Login to Amazon ECR
        if: github.event_name != 'pull_request' && secrets.ECR_REPOSITORY != ''
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag & push image to ECR
        if: github.event_name != 'pull_request' && steps.login-ecr.outcome == 'success' && secrets.ECR_REPOSITORY != ''
        run: |
          # Derive ECR image URI (ECR_REPOSITORY should be full URI or repo name). If it lacks a slash, compose it.
          if [[ "$ECR_REPOSITORY" != *.*amazonaws.com* ]]; then
            if [ -z "${AWS_REGION}" ]; then echo "AWS_REGION not set; cannot construct ECR URI"; exit 1; fi
            ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
            FULL_ECR_URI="$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY"
          else
            FULL_ECR_URI="$ECR_REPOSITORY"
          fi
          echo "Using ECR image URI: $FULL_ECR_URI"
          docker tag $IMAGE_NAME:${{ steps.meta.outputs.sha_tag }} $FULL_ECR_URI:${{ steps.meta.outputs.sha_tag }}
          docker tag $IMAGE_NAME:${{ steps.meta.outputs.branch_tag }} $FULL_ECR_URI:${{ steps.meta.outputs.branch_tag }}
          if [ -n "${{ steps.meta.outputs.latest_tag }}" ]; then
            docker tag $IMAGE_NAME:${{ steps.meta.outputs.sha_tag }} $FULL_ECR_URI:latest
          fi
          docker push $FULL_ECR_URI:${{ steps.meta.outputs.sha_tag }}
          docker push $FULL_ECR_URI:${{ steps.meta.outputs.branch_tag }}
          if [ -n "${{ steps.meta.outputs.latest_tag }}" ]; then
            docker push $FULL_ECR_URI:latest
          fi
          echo "ecr_image_uri=$FULL_ECR_URI" >> $GITHUB_OUTPUT

      - name: Summary
        run: |
          echo "Pushed tags:" >> $GITHUB_STEP_SUMMARY
          echo "- $IMAGE_NAME:${{ steps.meta.outputs.sha_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- $IMAGE_NAME:${{ steps.meta.outputs.branch_tag }}" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ steps.meta.outputs.latest_tag }}" ]; then
            echo "- $IMAGE_NAME:latest" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -n "${{ steps.login-ecr.outcome }}" ]; then
            echo "ECR push attempted (see log above)." >> $GITHUB_STEP_SUMMARY
          fi
